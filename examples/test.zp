(module "test"
  (export
    `("hi"     ,hi)
    `("addr"   ,addr)
    `("qq"     ,qq)
    `("collec" ,collec)
    `("nums"   ,nums)
    `("chrs"  ,chrs)
    `("bool"   ,bool)
    `("bye"    ,bye))

  (hi (lambda () "Hello Clojure"))
  (internal (lambda () (+ 1 1)))
  (qq (lambda (x y) `(x ,y ,@y)))
  (addr (lambda (x) (+ x 1)))
  (collec (lambda () [1 #{2 3} {4} b{2}]))
  (nums (lambda () (+ 1 1.1 1/1)))
  (chrs (lambda () (string #\a #\space #\newline #\tab #\backspace)))
  (bool (lambda () (eq? #t #f)))
  (bye (lambda (x) "Bye Clojure")))
